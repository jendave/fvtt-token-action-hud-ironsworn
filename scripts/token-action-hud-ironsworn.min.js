const e={ID:"token-action-hud-ironsworn"},t={ID:"token-action-hud-core"},s="2.0",n={stat:"IRONSWORN.Stats",meter:"tokenActionHud.ironsworn.meters",impact:"IRONSWORN.Impacts",utility:"tokenActionHud.utility"},i={stat:{id:"stat",name:"IRONSWORN.Stats",type:"system"},meter:{id:"meter",name:"tokenActionHud.ironsworn.meters",type:"system"},progress:{id:"progress",name:"IRONSWORN.ITEMS.SubtypeProgress",type:"system"},vow:{id:"vow",name:"IRONSWORN.ITEMS.SubtypeVow",type:"system"},connection:{id:"connection",name:"IRONSWORN.ITEMS.SubtypeConnection",type:"system"},path:{id:"path",name:"IRONSWORN.Asset Categories.Starforged.Path Assets.Title",type:"system"},companion:{id:"companion",name:"IRONSWORN.Asset Categories.Starforged.Companion Assets.Title",type:"system"},deed:{id:"deed",name:"IRONSWORN.Asset Categories.Starforged.Deed Assets.Title",type:"system"},module:{id:"module",name:"IRONSWORN.Asset Categories.Starforged.Module Assets.Title",type:"system"},supportVehicle:{id:"supportVehicle",name:"IRONSWORN.Asset Categories.Starforged.Support Vehicle Assets.Title",type:"system"},commandVehicle:{id:"commandVehicle",name:"IRONSWORN.Asset Categories.Starforged.Command Vehicle Assets.Title",type:"system"},ritual:{id:"ritual",name:"IRONSWORN.Asset Categories.Classic.Ritual Assets.Title",type:"system"},combatTalent:{id:"combatTalent",name:"IRONSWORN.Asset Categories.Classic.Combat Talent Assets.Title",type:"system"},misfortune:{id:"misfortune",name:"IRONSWORN.IMPACT.CATEGORY.Misfortunes",type:"system"},lastingEffect:{id:"lastingEffect",name:"IRONSWORN.IMPACT.CATEGORY.LastingEffects",type:"system"},burden:{id:"burden",name:"IRONSWORN.IMPACT.CATEGORY.Burdens",type:"system"},vehicleTrouble:{id:"vehicleTrouble",name:"IRONSWORN.IMPACT.CATEGORY.Vehicle",type:"system"},bane:{id:"bane",name:"IRONSWORN.DEBILITY.CATEGORY.Banes",type:"system"},condition:{id:"condition",name:"IRONSWORN.DEBILITY.CATEGORY.Conditions",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"}},o={asset:{groupId:"asset"},progress:{groupId:"progress"},connection:{groupId:"connection"},vow:{groupId:"vow"},bondset:{groupId:"bondset"},path:{groupId:"path"},companion:{groupId:"companion"},ritual:{groupId:"ritual"},deed:{groupId:"deed"},module:{groupId:"module"},commandVehicle:{groupId:"commandVehicle"},supportVehicle:{groupId:"supportVehicle"},combatTalent:{groupId:"combatTalent"}},a={edge:"IRONSWORN.Edge",heart:"IRONSWORN.Heart",iron:"IRONSWORN.Iron",shadow:"IRONSWORN.Shadow",wits:"IRONSWORN.Wits"},r={health:"IRONSWORN.Health",spirit:"IRONSWORN.Spirit",supply:"IRONSWORN.Supply",momentum:"IRONSWORN.Momentum",hold:"IRONSWORN.Hold"},d={wounded:{name:"IRONSWORN.IMPACT.Wounded",groupId:"misfortune"},shaken:{name:"IRONSWORN.IMPACT.Shaken",groupId:"misfortune"},unprepared:{name:"IRONSWORN.IMPACT.Unprepared",groupId:"misfortune"},permanentlyharmed:{name:"IRONSWORN.IMPACT.Permanentlyharmed",groupId:"lastingEffect"},traumatized:{name:"IRONSWORN.IMPACT.Traumatized",groupId:"lastingEffect"},doomed:{name:"IRONSWORN.IMPACT.Doomed",groupId:"burden"},tormented:{name:"IRONSWORN.IMPACT.Tormented",groupId:"burden"},indebted:{name:"IRONSWORN.IMPACT.Indebted",groupId:"burden"},battered:{name:"IRONSWORN.IMPACT.Battered",groupId:"vehicleTrouble"},cursed:{name:"IRONSWORN.IMPACT.Cursed",groupId:"vehicleTrouble"}},c={wounded:{name:"IRONSWORN.Debility.Wounded",groupId:"condition"},unprepared:{name:"IRONSWORN.Debility.Unprepared",groupId:"condition"},shaken:{name:"IRONSWORN.Debility.Shaken",groupId:"condition"},encumbered:{name:"IRONSWORN.Debility.Encumbered",groupId:"condition"},maimed:{name:"IRONSWORN.Debility.Maimed",groupId:"bane"},corrupted:{name:"IRONSWORN.Debility.Corrupted",groupId:"bane"},cursed:{name:"IRONSWORN.Debility.Cursed",groupId:"burden"},tormented:{name:"IRONSWORN.Debility.Tormented",groupId:"burden"}},l={battered:{name:"IRONSWORN.IMPACT.Battered",groupId:"vehicleTrouble"},cursed:{name:"IRONSWORN.IMPACT.Cursed",groupId:"vehicleTrouble"}};let m=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{m=class ActionHandler extends e.api.ActionHandler{a;async buildSystemActions(t){if(this.actors=this.actor?[this.actor]:this._getActors(),this.actorType=this.actor?.type,this.actor){let t=this.actor.items;t=e.api.Utils.sortItemsByName(t),this.items=t}"character"===this.actorType?this.#e():"starship"===this.actorType?this.#t():"shared"===this.actorType&&this.#s()}#e(){this.#n(),this.#i(),this.#o(),this.#a()}#t(){this.#a(!0)}#s(){this.#n()}async#n(){if(0===this.items.size)return;const t="item",s=new Map;for(const[e,t]of this.items){const n=structuredClone(t);"progress"===n.type?"vow"===n.system.subtype?n.type="vow":"bond"===n.system.subtype&&(n.type="connection"):"asset"===n.type&&("Path"===n.system.category?n.type="path":"Companion"===n.system.category?n.type="companion":"Combat Talent"===n.system.category?n.type="combatTalent":"Ritual"===n.system.category?n.type="ritual":"Deed"===n.system.category?n.type="deed":"Module"===n.system.category?n.type="module":"Command Vehicle"===n.system.category?n.type="commandVehicle":"Support Vehicle"===n.system.category&&(n.type="supportVehicle"));const i=n.type,o=s.get(i)??new Map;o.set(e,n),s.set(i,o)}for(const[i,a]of s){const s=o[i]?.groupId;if(!s)continue;const r={id:s,type:"system"},d=[...a].map((([s,i])=>{const o=s,a=i.name,r=e.api.Utils.i18n(n[t]),d=`${r?`${r}: `:""}${a}`,c=[t,o].join(this.delimiter);return{id:o,name:a,listName:d,encodedValue:c,info1:"progress"===i.type||"vow"===i.system.subtype||"connection"===i.type?{text:Math.floor(i.system.current/4).toString()}:null}}));this.addActions(d,r)}}#i(){const t="stat",s=[];for(const i in a){const o=i,r=e.api.Utils.i18n(a[i]).charAt(0).toUpperCase()+e.api.Utils.i18n(a[i]).slice(1),d=e.api.Utils.i18n(n[t]),c=`${d?`${d}: `:""}${r}`,l=[t,o].join(this.delimiter),m={text:this.actor.system[i]};s.push({id:o,name:r,listName:c,encodedValue:l,info1:m})}this.addActions(s,{id:"stat",type:"system"})}#o(){const t="meter",s=[];for(const i in r){const o=i;if("hold"==i&&!game.settings.get("foundry-ironsworn","character-hold"))continue;const a=e.api.Utils.i18n(r[i]).charAt(0).toUpperCase()+e.api.Utils.i18n(r[i]).slice(1),d=e.api.Utils.i18n(n[t]),c=`${d?`${d}: `:""}${a}`,l=[t,o].join(this.delimiter),m={text:this.actor.system[i].value};s.push({id:o,name:a,listName:c,encodedValue:l,info1:m})}this.addActions(s,{id:"meter",type:"system"})}async#a(t){const s="impact",i=new Map;let o;o="ironsworn.IronswornCharacterSheetV2"===this.actor.flags.core?.sheetClass?c:t?l:d;for(const e in o)if(o.hasOwnProperty(e)){const t=o[e],s=i.get(t.groupId)??new Map;s.set(e,t.groupId),i.set(t.groupId,s)}for(const[t,a]of i){if(!t)continue;const i={id:t,type:"system"},r=[...a].map((([t])=>{const i=t,a=e.api.Utils.i18n(o[t].name).charAt(0).toUpperCase()+e.api.Utils.i18n(o[t].name).slice(1),r=e.api.Utils.i18n(n[s]),d=`${r?`${r}: `:""}${a}`,c=[s,i].join(this.delimiter);return{id:i,name:a,listName:d,encodedValue:c,info1:{text:this.actor.system.debility[t]?"ðŸ”˜":null}}}));this.addActions(r,i)}}}}));let p=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{const t=i;Object.values(t).forEach((t=>{t.name=e.api.Utils.i18n(t.name),t.listName=`Group: ${e.api.Utils.i18n(t.listName??t.name)}`}));const s=Object.values(t);p={layout:[{nestId:"asset",id:"asset",name:e.api.Utils.i18n("IRONSWORN.ITEMS.TypeAsset"),groups:[{...t.path,nestId:"asset_path"},{...t.companion,nestId:"asset_companion"},{...t.ritual,nestId:"asset_ritual"},{...t.deed,nestId:"asset_deed"},{...t.module,nestId:"asset_module"},{...t.commandVehicle,nestId:"asset_commandVehicle"},{...t.supportVehicle,nestId:"asset_supportVehicle"},{...t.combatTalent,nestId:"asset_combatTalent"}]},{nestId:"progress",id:"progress",name:e.api.Utils.i18n("IRONSWORN.ITEMS.SubtypeProgress"),groups:[{...t.progress,nestId:"progress_progress"},{...t.vow,nestId:"progress_vow"}]},{nestId:"connection",id:"connection",name:e.api.Utils.i18n("IRONSWORN.ITEMS.SubtypeConnection"),groups:[{...t.connection,nestId:"connection_connection"}]},{nestId:"stat",id:"stat",name:e.api.Utils.i18n("IRONSWORN.Stats"),groups:[{...t.stat,nestId:"stat_stat"}]},{nestId:"meter",id:"meter",name:e.api.Utils.i18n("tokenActionHud.ironsworn.meters"),groups:[{...t.meter,nestId:"meter_meter"}]},{nestId:"impact",id:"impact",name:e.api.Utils.i18n("IRONSWORN.Impacts"),groups:[{...t.misfortune,nestId:"impact_misfortune"},{...t.lastingEffect,nestId:"impact_lastingEffect"},{...t.burden,nestId:"impact_burden"},{...t.vehicleTrouble,nestId:"impact_vehicleTrouble"},{...t.bane,nestId:"impact_bane"},{...t.condition,nestId:"impact_condition"}]},{nestId:"utility",id:"utility",name:e.api.Utils.i18n("tokenActionHud.utility"),groups:[{...t.combat,nestId:"utility_combat"},{...t.token,nestId:"utility_token"},{...t.rests,nestId:"utility_rests"},{...t.utility,nestId:"utility_utility"}]}],groups:s}}));let u=null;function register(e){}Hooks.once("tokenActionHudCoreApiReady",(async e=>{u=class RollHandler extends e.api.RollHandler{async handleActionClick(e,t){const[s,n]=t.split("|");if(["item"].includes(s)&&this.isRenderItem())return this.doRenderItem(this.actor,n);const i=["character","starship"];if(this.actor)return void await this.#r(e,this.actor,this.token,s,n);const o=canvas.tokens.controlled.filter((e=>i.includes(e.actor?.type)));for(const t of o){const i=t.actor;await this.#r(e,i,t,s,n)}}async handleActionHover(e,t){}async handleGroupClick(e,t){}async#r(e,t,s,n,i){switch(n){case"item":"progress"===t.items.get(i).type&&this.#d(e,t,i),this.#c(e,t,i);break;case"stat":this.#l(e,t,i);break;case"meter":this.#m(e,t,i);break;case"impact":this.#p(e,t,i);break;case"utility":this.#u(s,i)}}#d(e,t,s){t.items.get(s).sheet.render(!0)}#c(e,t,s){t.items.get(s).sheet.render(!0)}#l(e,t,s){CONFIG.IRONSWORN.applications.IronswornPrerollDialog.showForStat(s,t)}#m(e,t,s){"momentum"!==s&&CONFIG.IRONSWORN.applications.IronswornPrerollDialog.showForStat(s,t)}async#p(e,t,s){const n={system:{debility:{[s]:!t.system.debility[s]}}};await t.update(n),Hooks.call("tokenActionHudCoreApiReady",t)}async#u(e,t){if("endTurn"===t)game.combat?.current?.tokenId===e.id&&await(game.combat?.nextTurn())}}}));let y=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{y=class SystemManager extends t.api.SystemManager{getActionHandler(){return new m}getAvailableRollHandlers(){return{core:"Core Ironsworn"}}getRollHandler(e){let t;return t=new u,t}async registerDefaults(){return p}registerSettings(e){}registerStyles(){return{template:{class:"tah-style-template-style",file:"tah-template-style",moduleId:e.ID,name:"Template Style"}}}}})),Hooks.on("tokenActionHudCoreApiReady",(async()=>{const t=game.modules.get(e.ID);t.api={requiredCoreModuleVersion:"2.0",SystemManager:y},Hooks.call("tokenActionHudSystemReady",t)}));let I=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{I=class Utils{static getSetting(s,n=null){let i=n??null;try{i=game.settings.get(e.ID,s)}catch{t.api.Logger.debug(`Setting '${s}' not found`)}return i}static async setSetting(s,n){try{n=await game.settings.set(e.ID,s,n),t.api.Logger.debug(`Setting '${s}' set to '${n}'`)}catch{t.api.Logger.debug(`Setting '${s}' not found`)}}}}));export{n as ACTION_TYPE,m as ActionHandler,t as CORE_MODULE,p as DEFAULTS,i as GROUP,c as IMPACTS_IS,d as IMPACTS_SF,l as IMPACTS_STARSHIP,o as ITEM_TYPE,r as METERS,e as MODULE,s as REQUIRED_CORE_MODULE_VERSION,u as RollHandler,a as STATS,y as SystemManager,I as Utils,register};
//# sourceMappingURL=token-action-hud-ironsworn.min.js.map
